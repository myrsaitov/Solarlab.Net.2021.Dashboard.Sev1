https://question-it.com/questions/4806046/zachem-ispolzovat-icollection-a-ne-ienumerable-ili-list-t-dlja-otnoshenij-mnogie-mnogie-odin-mnogie


IEnumerable - содержит только метод GetEnumerator для получения Enumerator и позволяет выполнять цикл
ICollection содержит дополнительные методы: Add, Remove, Contains, Count, CopyTo.
ICollection унаследован от IEnumerable
С помощью ICollection вы можете изменить коллекцию, используя такие методы, как добавление / удаление. У вас нет права делать то же самое с IEnumerable.



Простая программа:

using System;
using System.Collections;
using System.Collections.Generic;

namespace StackDemo
{
    class Program 
    {
        static void Main(string[] args)
        {
            List<Person> persons = new List<Person>();
            persons.Add(new Person("John",30));
            persons.Add(new Person("Jack", 27));

            ICollection<Person> personCollection = persons;
            IEnumerable<Person> personEnumeration = persons;

            // IEnumeration
            // IEnumration Contains only GetEnumerator method to get Enumerator and make a looping
            foreach (Person p in personEnumeration)
            {                                   
               Console.WriteLine("Name:{0}, Age:{1}", p.Name, p.Age);
            }

            // ICollection
            // ICollection Add/Remove/Contains/Count/CopyTo
            // ICollection is inherited from IEnumerable
            personCollection.Add(new Person("Tim", 10));

            foreach (Person p in personCollection)
            {
                Console.WriteLine("Name:{0}, Age:{1}", p.Name, p.Age);        
            }
            Console.ReadLine();

        }
    }

    class Person
    {
        public string Name { get; set; }
        public int Age { get; set; }
        public Person(string name, int age)
        {
            this.Name = name;
            this.Age = age;
        }
    }
}