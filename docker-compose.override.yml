version: '3.4'

##############################################################
##############################################################
## Services
##############################################################
##############################################################

services:

  ##############################################################
  # Accounts
  ##############################################################
  
  accounts.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=${PORT_SSL_ACCOUNTS_API}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.aspnet/DataProtection-Keys/bulleting_board.pfx
      - AllowedHosts=${ALLOWED_HOSTS_ACCOUNTS_API}
      - Token__Key=${TOKEN_KEY_ACCOUNTS_API}
      - SwaggerOptions__UseSwagger=true
      - DataBaseOptions__UseMsSql=false
      - ConnectionStrings__PostgresAdvertisementsDb=Host=host.docker.internal;Database=accounts_db;Username=accounts_user;Password=${PASSWORD_POSTGRES_ACCOUNTS_API};Port=${PORT_POSTGRES_ACCOUNTS_API};Pooling=false;Timeout=300;CommandTimeout=300
      - ConnectionStrings__MsSqlAdvertisementsDb=Server=localhost;Database=trunk_dictionary;uid=BaseTrade;password=1q2w3e4r+;TrustServerCertificate=true
      - RegionValidateApiClientUri=https://host.docker.internal:${PORT_SSL_ADVERTISEMENTS_API}/api/v1/regions/
    ports:
      - "${PORT_ACCOUNTS_API}:80"
      - "${PORT_SSL_ACCOUNTS_API}:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/DataProtection-Keys:ro
      
  accounts.postgres:
    environment:
        - POSTGRES_DB=accounts_db
        - POSTGRES_USER=accounts_user
        - POSTGRES_PASSWORD=${PASSWORD_POSTGRES_ACCOUNTS_API}
    ports: 
        - "${PORT_POSTGRES_ACCOUNTS_API}:5432"
    volumes:
        - accounts_data:/mnt/largedb


  ##############################################################
  # Advertisements
  ##############################################################
  
  advertisements.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=${PORT_SSL_ADVERTISEMENTS_API}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.aspnet/DataProtection-Keys/bulleting_board.pfx
      - AllowedHosts=${ALLOWED_HOSTS_ADVERTISEMENTS_API}
      - Token__Key=${TOKEN_KEY_ADVERTISEMENTS_API}
      - SwaggerOptions__UseSwagger=true
      - DataBaseOptions__UseMsSql=false
      - ConnectionStrings__PostgresAdvertisementsDb=Host=host.docker.internal;Database=advertisements_db;Username=advertisements_user;Password=${PASSWORD_POSTGRES_ADVERTISEMENTS_API};Port=${PORT_POSTGRES_ADVERTISEMENTS_API};Pooling=false;Timeout=300;CommandTimeout=300
      - ConnectionStrings__MsSqlAdvertisementsDb=Server=localhost;Database=trunk_dictionary;uid=BaseTrade;password=1q2w3e4r+;TrustServerCertificate=true
      - UserValidateApiClientUri=https://host.docker.internal:${PORT_SSL_ACCOUNTS_API}/api/v1/accounts/validate-token
      - UserFilesUploadApiClientUri=https://host.docker.internal:${PORT_SSL_USER_FILES_API}/api/v1/userfiles/upload-base64
    ports:
      - "${PORT_ADVERTISEMENTS_API}:80"
      - "${PORT_SSL_ADVERTISEMENTS_API}:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/DataProtection-Keys:ro

  advertisements.postgres:
    environment:
        - POSTGRES_DB=advertisements_db
        - POSTGRES_USER=advertisements_user
        - POSTGRES_PASSWORD=${PASSWORD_POSTGRES_ADVERTISEMENTS_API}
    ports: 
        - "${PORT_POSTGRES_ADVERTISEMENTS_API}:5432"
    volumes:
        - advertisements_data:/mnt/largedb

  ##############################################################
  # UserFiles
  ##############################################################
  
  user_files.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=${PORT_SSL_USER_FILES_API}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.aspnet/DataProtection-Keys/bulleting_board.pfx
      - AllowedHosts=${ALLOWED_HOSTS_USER_FILES_API}
      - Token__Key=${TOKEN_KEY_USER_FILES_API}
      - SwaggerOptions__UseSwagger=true
      - DataBaseOptions__UseMsSql=false
      - ConnectionStrings__PostgresUserFilesDb=Host=host.docker.internal;Database=user_files_db;Username=user_files_user;Password=${PASSWORD_POSTGRES_USER_FILES_API};Port=${PORT_POSTGRES_USER_FILES_API};Pooling=false;Timeout=300;CommandTimeout=300
      - ConnectionStrings__MsSqlUserFilesDb=Server=localhost;Database=trunk_dictionary;uid=BaseTrade;password=1q2w3e4r+;TrustServerCertificate=true
      - UserValidateApiClientUri=https://host.docker.internal:${PORT_SSL_ACCOUNTS_API}/api/v1/accounts/validate-token
      - AdvertisementValidateApiClientUri=https://host.docker.internal:${PORT_SSL_ADVERTISEMENTS_API}/api/v1/advertisements
      - UserFilesUploadApiClientUri=https://host.docker.internal:${PORT_SSL_USER_FILES_API}/api/v1/userfiles/upload-base64
      - YandexDisk__URI=https://cloud-api.yandex.net/v1/disk/
      - YandexDisk__BasePath=disk:/
      - YandexDisk__OAuthValue=AQAAAAAW4aqKAADLW26sI3bxvEVwuA0Xk8VP48g
    ports:
      - "${PORT_USER_FILES_API}:80"
      - "${PORT_SSL_USER_FILES_API}:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/DataProtection-Keys:ro

  user_files.postgres:
    environment:
        - POSTGRES_DB=user_files_db
        - POSTGRES_USER=user_files_user
        - POSTGRES_PASSWORD=${PASSWORD_POSTGRES_USER_FILES_API}
    ports: 
        - "${PORT_POSTGRES_USER_FILES_API}:5432"
    volumes:
        - user_files_data:/mnt/largedb


##############################################################
##############################################################
## Volumes
##############################################################
##############################################################

volumes:

  accounts_data:
    driver_opts:
      type: none
      device: /c/Docker/Root/BulletingBoard/Postgres/Accounts/largedb
      o: bind

  advertisements_data:
    driver_opts:
      type: none
      device: /c/Docker/Root/BulletingBoard/Postgres/Advertisements/largedb
      o: bind

  user_files_data:
    driver_opts:
      type: none
      device: /c/Docker/Root/BulletingBoard/Postgres/UserFiles/largedb
      o: bind
